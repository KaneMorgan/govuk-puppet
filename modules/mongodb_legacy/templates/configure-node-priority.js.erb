var expectedReplicaSetMembers = [
  <%- @members.each do |host, properties| -%>
    {
      host: '<%= host %>:27017',
      priority: <%= properties ? properties.fetch('priority', 1) : 1 %>,
      hidden: <%= properties ? properties.fetch('hidden', false) : false %>,
    },
  <%- end -%>
]

var actualReplicaSetConfig = rs.conf();
var replicaSetChangesMade = false;

for (var i = 0; i < expectedReplicaSetMembers.length; i++) {
  expectedMember = expectedReplicaSetMembers[i];
  thisMember = actualReplicaSetConfig.members.filter(function (value) {
    // FIXME: This conditional is required to handle the case where the
    // MongoDB replicaset config is configured on the machines' hostnames
    // and vDCs but the replicaset config in Puppet specifies hostnames only.
    if (value.host.indexOf('.') > -1) {
      hostname = value.host.split('.')[0] + ':27017'
    } else {
      hostname = value.host
    }
    return hostname === expectedMember.host
  })[0];
  if (!thisMember.priority) {
    thisMember.priority = 1;
  }
  if (thisMember.priority !== expectedMember.priority) {
    thisMember.priority = expectedMember.priority;
    replicaSetChangesMade = true;
  }
  if (!thisMember.hidden) {
    thisMember.hidden = false;
  }
  if (thisMember.hidden !== expectedMember.hidden) {
    thisMember.hidden = expectedMember.hidden;
    replicaSetChangesMade = true;
  }
}

if (replicaSetChangesMade) {
  rs.reconfig(actualReplicaSetConfig);
}
